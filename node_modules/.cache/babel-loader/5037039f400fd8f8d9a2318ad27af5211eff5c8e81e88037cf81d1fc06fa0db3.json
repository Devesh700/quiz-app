{"ast":null,"code":"var _jsxFileName = \"D:\\\\react\\\\reactapps\\\\quiz app\\\\src\\\\Quiz.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Ques from './Questions';\nimport { useLocation } from 'react-router-dom';\nimport './Quiz.css'; // Import the CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Quiz = () => {\n  _s();\n  const [x, setx] = useState(0);\n  const [Question, setquestion] = useState([]);\n  const [Length, setlength] = useState(0);\n  const [score, setscore] = useState(0);\n  const [option, setoption] = useState();\n  const [result, setresultdisplay] = useState(false);\n  const [flag, setFlag] = useState([]);\n  const subject = useLocation();\n  useEffect(() => {\n    console.log(subject.state.subj);\n    setquestion(() => {\n      return Ques.filter(val => {\n        return val.subject === subject.state.subj;\n      });\n    });\n  }, []);\n  useEffect(() => {\n    console.log(Question.length);\n    setlength(Question.length);\n    setFlag(new Array(Question.length).fill(false));\n  }, [Question]);\n  const handleNext = index => {\n    setx(x + 100);\n    if (flag[index] === false && option === Question[index].answer) {\n      setscore(score + 1);\n      setFlag(prevFlags => {\n        const newFlags = [...prevFlags];\n        newFlags[index] = true;\n        return newFlags;\n      });\n    }\n    setoption('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quiz-container\",\n      children: Question.map((val, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [index + 1, \". \\xA0\", val.question]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: `option ${option === 'option1' ? 'green-background' : ''}`,\n          onClick: () => {\n            setoption('option1');\n          },\n          children: [\"(a)\\u2003\", val.option1]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button-container\",\n          children: [index !== 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary\",\n            onClick: () => setx(x - 100),\n            children: \"prev\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 17\n          }, this), index !== Length - 1 ? /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-success\",\n            onClick: () => handleNext(index),\n            children: \"next\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-success submit-button\",\n            onClick: () => {\n              if (flag[index] === false && val.answer === option) {\n                setscore(score + 1);\n                setFlag(prevFlags => {\n                  const newFlags = [...prevFlags];\n                  newFlags[index] = true;\n                  return newFlags;\n                });\n              }\n              setresultdisplay(true);\n              setoption('');\n            },\n            children: \"submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `result ${result ? 'result-visible' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"you have scored \", score, \" out of \", Length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: score / Length > 0.8 ? ` congratulations you got ${score / Length * 100}%` : ' study to achieve a better result'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(Quiz, \"7bfzJKykY+vq5rDwptMhoW5GSFY=\", false, function () {\n  return [useLocation];\n});\n_c = Quiz;\nexport default Quiz;\nvar _c;\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["React","useEffect","useState","Ques","useLocation","Quiz","x","setx","Question","setquestion","Length","setlength","score","setscore","option","setoption","result","setresultdisplay","flag","setFlag","subject","console","log","state","subj","filter","val","length","Array","fill","handleNext","index","answer","prevFlags","newFlags","map","question","option1"],"sources":["D:/react/reactapps/quiz app/src/Quiz.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Ques from './Questions';\r\nimport { useLocation } from 'react-router-dom';\r\nimport './Quiz.css'; // Import the CSS file\r\n\r\nconst Quiz = () => {\r\n  const [x, setx] = useState(0);\r\n  const [Question, setquestion] = useState([]);\r\n  const [Length, setlength] = useState(0);\r\n  const [score, setscore] = useState(0);\r\n  const [option, setoption] = useState();\r\n  const [result, setresultdisplay] = useState(false);\r\n  const [flag, setFlag] = useState([]);\r\n\r\n  const subject = useLocation();\r\n\r\n  useEffect(() => {\r\n    console.log(subject.state.subj);\r\n    setquestion(() => {\r\n      return Ques.filter((val) => {\r\n        return val.subject === subject.state.subj;\r\n      });\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log(Question.length);\r\n    setlength(Question.length);\r\n    setFlag(new Array(Question.length).fill(false));\r\n  }, [Question]);\r\n\r\n  const handleNext = (index) => {\r\n    setx(x + 100);\r\n    if (flag[index] === false && option === Question[index].answer) {\r\n      setscore(score + 1);\r\n      setFlag((prevFlags) => {\r\n        const newFlags = [...prevFlags];\r\n        newFlags[index] = true;\r\n        return newFlags;\r\n      });\r\n    }\r\n    setoption('');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"quiz-container\">\r\n        {Question.map((val, index) => (\r\n          <div\r\n            key={index}\r\n            className=\"question-container\"\r\n          >\r\n            <h3>{index + 1}. &nbsp;{val.question}</h3>\r\n            <p\r\n              className={`option ${option === 'option1' ? 'green-background' : ''}`}\r\n              onClick={() => {\r\n                setoption('option1');\r\n              }}\r\n            >\r\n              (a)&emsp;{val.option1}\r\n            </p>\r\n            {/* Repeat the same pattern for other options */}\r\n            <div className=\"button-container\">\r\n              {index !== 0 && (\r\n                <button className=\"btn btn-primary\" onClick={() => setx(x - 100)}>\r\n                  prev\r\n                </button>\r\n              )}\r\n              {index !== Length - 1 ? (\r\n                <button className=\"btn btn-success\" onClick={() => handleNext(index)}>\r\n                  next\r\n                </button>\r\n              ) : (\r\n                <button\r\n                  className=\"btn btn-success submit-button\"\r\n                  onClick={() => {\r\n                    if (flag[index] === false && val.answer === option) {\r\n                      setscore(score + 1);\r\n                      setFlag((prevFlags) => {\r\n                        const newFlags = [...prevFlags];\r\n                        newFlags[index] = true;\r\n                        return newFlags;\r\n                      });\r\n                    }\r\n                    setresultdisplay(true);\r\n                    setoption('');\r\n                  }}\r\n                >\r\n                  submit\r\n                </button>\r\n              )}\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div className={`result ${result ? 'result-visible' : ''}`}>\r\n        <p>you have scored {score} out of {Length}</p>\r\n        <h2>\r\n          {score / Length > 0.8\r\n            ? ` congratulations you got ${(score / Length) * 100}%`\r\n            : ' study to achieve a better result'}\r\n        </h2>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Quiz;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}